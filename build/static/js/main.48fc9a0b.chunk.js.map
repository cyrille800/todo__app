{"version":3,"sources":["todo.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","name","ListItem","ListItemText","secondary","primary","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","todo","setTodo","input","setInput","useEffect","collection","onSnapshot","snapshot","docs","map","data","className","FormControl","FormLabel","TextField","value","onChange","event","target","FormHelperText","Button","disabled","type","onClick","preventDefault","add","variant","color","List","item","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAGe,SAASA,EAAKC,GAC3B,IAAQC,EAAQD,EAARC,KACR,OACE,mCAEI,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAcC,UAAU,WAAWC,QAASJ,Q,aCUvCK,G,YAfKC,EAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,yDACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGIC,aC+CRC,MAjDf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAmBA,OALAC,qBAAU,kBACRlB,EAAGmB,WAAW,SAASC,YAAW,SAACC,GACjCN,EAAQM,EAASC,KAAKC,KAAI,SAAAT,GAAI,OAAIA,EAAKU,OAAOV,cAE/C,IAED,sBAAKW,UAAU,MAAf,UACE,+CACA,+BACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,iCACA,cAACC,EAAA,EAAD,CAAWC,MAAOb,EAAOc,SAAU,SAACC,GAtB1Cd,EAsBgEc,EAtBrDC,OAAOH,UAuBZ,cAACI,EAAA,EAAD,iCACA,cAACC,EAAA,EAAD,CACEC,UAAWnB,EACXoB,KAAK,SACLC,QAAS,SAACN,GAAD,OAAuBA,EAvBtCO,iBACFtC,EAAGmB,WAAW,SAASoB,IAAI,CACzBzB,KAAME,SAERC,EAAS,KAoBDuB,QAAQ,YACRC,MAAM,UALR,2BAYJ,cAACC,EAAA,EAAD,CAAMjB,UAAU,aAAhB,SACGX,GAAQA,EAAKS,KAAI,SAACoB,EAAMC,GAAP,OAAe,cAACnD,EAAD,CAAgBE,KAAMgD,GAAXC,YC5CrCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.48fc9a0b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nexport default function Todo(props) {\r\n  const { name} = props;\r\n  return (\r\n    <>\r\n      \r\n        <ListItem>\r\n          <ListItemText secondary=\"Todo ...\" primary={name} />\r\n        </ListItem>\r\n      \r\n    </>\r\n  );\r\n}\r\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\nimport firebase from \"firebase\";\r\n\r\nconst fireBaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyAI-LAGiSt5PR9_SJEf8rVOchTZnZxglUU\",\r\n    authDomain: \"to-do-app-cp-da863.firebaseapp.com\",\r\n    databaseURL: \"https://to-do-app-cp-da863-default-rtdb.firebaseio.com\",\r\n    projectId: \"to-do-app-cp-da863\",\r\n    storageBucket: \"to-do-app-cp-da863.appspot.com\",\r\n    messagingSenderId: \"500035465580\",\r\n    appId: \"1:500035465580:web:6e07bb4e37c8272df88349\",\r\n    measurementId: \"G-73YBTND9MJ\"\r\n});\r\n\r\nconst db = fireBaseApp.firestore();\r\n//const auth = fireBaseApp.auth()\r\n//const storage = fireBaseApp.storage()\r\n\r\nexport default db;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Todo from \"./todo\";\nimport { List } from \"@material-ui/core\";\nimport \"./todo.css\";\n\nimport db from \"./firebase\";\n\nfunction App() {\n  const [todo, setTodo] = useState([]);\n\n  const [input, setInput] = useState(\"\");\n\n  const changeValue = function (e) {\n    setInput(e.target.value);\n  };\n\n  const addTodoList = function (e) {\n    e.preventDefault();\n    db.collection(\"todos\").add({\n      todo: input,\n    });\n    setInput(\"\");\n  };\n\n  useEffect(()=> (\n    db.collection(\"todos\").onSnapshot((snapshot) => {\n      setTodo(snapshot.docs.map(todo => todo.data().todo))\n    })\n  ), [])\n  return (\n    <div className=\"App\">\n      <h1>Hello world !</h1>\n      <form>\n        <FormControl>\n          <FormLabel>Write your message</FormLabel>\n          <TextField value={input} onChange={(event) => changeValue(event)} />\n          <FormHelperText>hitting the button</FormHelperText>\n          <Button\n            disabled={!input}\n            type=\"submit\"\n            onClick={(event) => addTodoList(event)}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            add Todo\n          </Button>\n        </FormControl>\n      </form>\n\n      <List className=\"todo__list\">\n        {todo && todo.map((item, key) => <Todo key={key} name={item} />)}\n      </List>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}